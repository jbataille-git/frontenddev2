/* 1. De main heb ik nodig als flex om de grid-container gecentreerd te hebben 
      of is daar een andere manier voor?
   2. Kan ik de button op een nettere manier centreren, zowel verticaal als horizontaal?
      dus zonder harde waarden voor top en left?
   3. Een transition werkte mooier dan een animation met keyframes, zag er vloeiender uit,
      daarom ben ik met een transition blijven werken
   4. Ik heb het niet 100% goed werkend gekregen.
      als de button in beeld komt, rekt zijn container even op. Is niet fraai.
      Maar ik weet niet hoe ik het op moet lossen. Een vaste width en heigth werkt niet goed.
      Een max-height werkt ook niet helemaal goed.
      Ik heb er veel tijd aan besteed en krijg het niet in orde. Ik hoor graag hoe het wel kan.
*/
body {
  background-color: lightgray;
  margin-top: 20px;
}

main {
  background-color: #c3cfe2;
  display: flex;
  justify-content: center;
}

.grid-container {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 30px;
  padding: 30px;
  max-width: 1320px;
}

.card__background {
  max-height: 600px;
  border-radius: 20px;
  transition-property: background;
  transition-timing-function: ease-in-out;
  transition-duration: 300ms;
}
.card__background:hover {
  background-color: #474747;
}

.card__button {
  display: none;
  border-radius: 5px;
  height: 2em;
  font-weight: bold;
  box-shadow: 2px 2px 2px gray;
}

.card__background:hover .card__button {
  display: block;
  position: relative;
  left: 170px;
  /* is alleen goed als de card op zijn maximale formaat is, dan staat 'ie in het midden */
  top: 300px;
}

.card__image {
  width: 100%;
  max-width: 450px;
  border-radius: 20px;
  opacity: 1;
  /* visibility: visible; */
  transition-property: opacity;
  /* transition-property: visibility; */
  transition-timing-function: ease-in-out;
  transition-duration: 300ms;
}
.card__image:hover {
  opacity: 0;
}

/* ------------------------------------------------------------------------------------*/
/* media-queries
   als je dit gebruikt: grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
   heb je de media queries niet meer nodig. Het werkt wel een beetje anders.
   Je kunt meer dan drie kolommen in beeld krijgen.
*/
/* ------------------------------------------------------------------------------------*/
/* ondergrens van tablets */
@media screen and (min-width: 768px) {
  .grid-container {
    /* grid-template-columns: auto auto; */
    grid-template-columns: 1fr 1fr;
  }
}
/* ondergrens van desktops */
@media screen and (min-width: 1024px) {
  .grid-container {
    grid-template-columns: repeat(3, 1fr);
  }
}
/*
@media screen and (min-width: 1600px) {
  .grid-container {
      grid-template-columns: repeat(4, 1fr);
  }
}
*//*# sourceMappingURL=styles.css.map */