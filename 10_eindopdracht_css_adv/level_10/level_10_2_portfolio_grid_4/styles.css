body {
    background-color: lightgray;
    margin-top: 20px;
}

/* 1. de main heb ik nodig als flex om de grid-container gecentreed te hebben 
   of is daar een andere manier voor?
   2. kan ik de button op een nettere manier centreren, zowel verticaal als horizontaal?
   dus zonder harde waarden voor top en left?
*/




main {
  background-color: #c3cfe2;
  display: flex;
  justify-content: center;
}

.grid-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 30px;
    padding: 30px;
    max-width: 1320px;
}

.card__image {
    width: 100%;
    max-width: 450px;
    border-radius: 20px;
 
    opacity: 1;
    /* visibility: visible; */
    transition-property: opacity;
    /* transition-property: visibility; */
    transition-timing-function: ease-in-out;
    transition-duration: 300ms;     
}

.card__background {
    border-radius: 20px;
    transition-property: background;
    transition-timing-function: ease-in-out;
    transition-duration: 300ms;     
}

.card__background:hover {
    background-color: rgb(71, 71, 71);  
}

.card__button {
    display: none;
    position: relative;
    left: 165px;
    top: 300px;
}


 .card__image:hover {
    opacity: 0;
    /* dat animeert niet mooi, die visibility, hij moet het wel kunnen */
    /* visibility: hidden; */
    /* met een animation gaat de weg terug niet soepel, dat is dan geen 1000ms
       dat gaat met transition mooier
    */
    /* animation-name: hide-image; */
    /* animation-duration: 1000ms; */
    /* animation-fill-mode: both; */
}

@keyframes hide-image {
  from {
    /* visibility: visible; */
    opacity: 1;
  }
  to {
    /* visibility: hidden; */
    opacity: 0;
  }
}




/*
transition of keyframes
zet opacity van 1 naar 0
zet visibility van hidden naar visible
*/

/* ------------------------------------------------------------------------------------*/
/* media-queries                                                                       */
/* ------------------------------------------------------------------------------------*/

/* ondergrens van tablets */
@media screen and (min-width: 768px) {
  .grid-container {
      /* grid-template-columns: auto auto; */
      grid-template-columns: 1fr 1fr;
  }
}

/* ondergrens van desktops */
@media screen and (min-width: 1024px) {
  .grid-container {
      grid-template-columns: repeat( 3, 1fr);
  }
}
/*
@media screen and (min-width: 1600px) {
  .grid-container {
      grid-template-columns: repeat(4, 1fr);
  }
}
*/